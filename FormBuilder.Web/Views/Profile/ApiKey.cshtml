@model FormBuilder.Web.ViewModels.ApiKeyViewModel
@{
    ViewData["Title"] = "API Key Management";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-key"></i> API Key Management
                    </h4>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["NewApiKey"] != null)
                    {
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle"></i>
                            <strong>Important:</strong> Copy this API key now. You won't be able to see it again!
                            <div class="mt-2">
                                <code class="user-select-all fs-6">@TempData["NewApiKey"]</code>
                                <button class="btn btn-sm btn-outline-secondary ms-2" onclick="copyApiKey('@TempData["NewApiKey"]')">
                                    <i class="fas fa-copy"></i> Copy
                                </button>
                            </div>
                        </div>
                    }

                    @if (Model.HasApiKey)
                    {
                        <div class="mb-3">
                            <label class="form-label">Current API Key</label>
                            <div class="input-group">
                                <input type="text" class="form-control" value="@Model.ApiKey.Substring(0, 10)..." readonly />
                                <span class="input-group-text">
                                    @if (Model.IsEnabled)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Disabled</span>
                                    }
                                </span>
                            </div>
                        </div>

                        <dl class="row">
                            <dt class="col-sm-4">Generated At:</dt>
                            <dd class="col-sm-8">@Model.GeneratedAt?.ToString("dd MMM yyyy HH:mm")</dd>

                            <dt class="col-sm-4">Last Used:</dt>
                            <dd class="col-sm-8">
                                @if (Model.LastUsedAt.HasValue)
                                {
                                    @Model.LastUsedAt.Value.ToString("dd MMM yyyy HH:mm")
                                }
                                else
                                {
                                    <span class="text-muted">Never used</span>
                                }
                            </dd>
                        </dl>

                        <form asp-action="RevokeApiKey" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger" 
                                    onclick="return confirm('Are you sure? This will invalidate your current API key.')">
                                <i class="fas fa-trash"></i> Revoke API Key
                            </button>
                        </form>
                    }
                    else
                    {
                        <p>You don't have an API key yet. Generate one to access the FormBuilder API.</p>
                        
                        <form asp-action="GenerateApiKey" method="post">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Generate API Key
                            </button>
                        </form>
                    }

                    <hr class="my-4">

                    <h5>API Documentation</h5>
                    <p>Use your API key to access aggregated template data.</p>

                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i> 
                        Full API documentation is available at 
                        <a href="/api-docs" target="_blank">/api-docs</a>
                    </div>

                    <h6>Quick Start:</h6>
                    <div class="bg-light p-3 rounded mb-3">
                        <code>GET @($"{Context.Request.Scheme}://{Context.Request.Host}")/api/v1/templates/aggregates</code>
                    </div>

                    <h6>Request Headers:</h6>
                    <div class="bg-light p-3 rounded mb-3">
                        <code>X-API-Key: YOUR_API_KEY</code>
                    </div>

                    <h6>Example Response:</h6>
                    <pre class="bg-light p-3 rounded"><code>{
                    "templates": [
                        {
                        "id": 1,
                        "title": "Customer Survey",
                        "author": "user@example.com",
                        "questions": [
                            {
                            "text": "How satisfied are you?",
                            "type": "integer",
                            "answerCount": 50,
                            "aggregation": {
                                "average": 4.2,
                                "min": 1,
                                "max": 5
                            }
                            }
                        ]
                        }
                    ]
                    }</code></pre>

                    <h6 class="mt-3">Rate Limits:</h6>
                    <table class="table table-sm">
                        <tr>
                            <td>Endpoint</td>
                            <td>Limit</td>
                            <td>Period</td>
                        </tr>
                        <tr>
                            <td><code>/api/v1/*</code></td>
                            <td>100 requests</td>
                            <td>1 hour</td>
                        </tr>
                        <tr>
                            <td>API Key Generation</td>
                            <td>1 request</td>
                            <td>5 minutes</td>
                        </tr>
                    </table>

                    <h6 class="mt-3">Response Codes:</h6>
                    <ul>
                        <li><code>200 OK</code> - Request successful</li>
                        <li><code>401 Unauthorized</code> - Invalid or missing API key</li>
                        <li><code>429 Too Many Requests</code> - Rate limit exceeded</li>
                        <li><code>500 Internal Server Error</code> - Server error</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function copyApiKey(apiKey) {
            navigator.clipboard.writeText(apiKey).then(function() {
                alert('API key copied to clipboard!');
            }, function() {
                alert('Failed to copy API key. Please copy manually.');
            });
        }
    </script>
}