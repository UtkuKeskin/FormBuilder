@model FormBuilder.Web.ViewModels.Template.CreateTemplateViewModel
@{
    ViewData["Title"] = "Create Template";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <h2 class="mb-4">@ViewData["Title"]</h2>
            
            <form asp-action="Create" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                
                <!-- Tabs Navigation -->
                <ul class="nav nav-tabs mb-4" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="general-tab" data-bs-toggle="tab" 
                                data-bs-target="#general" type="button" role="tab">
                            <i class="fas fa-info-circle"></i> General Settings
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="questions-tab" data-bs-toggle="tab" 
                                data-bs-target="#questions" type="button" role="tab">
                            <i class="fas fa-question-circle"></i> Questions
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="access-tab" data-bs-toggle="tab" 
                                data-bs-target="#access" type="button" role="tab">
                            <i class="fas fa-lock"></i> Access Control
                        </button>
                    </li>
                </ul>
                
                <!-- Tab Content -->
                <div class="tab-content">
                    <!-- General Tab -->
                    <div class="tab-pane fade show active" id="general" role="tabpanel">
                        <div class="card">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label asp-for="Title" class="form-label required">Title</label>
                                        <input asp-for="Title" class="form-control" required>
                                        <span asp-validation-for="Title" class="text-danger"></span>
                                    </div>
                                    
                                    <div class="col-md-6 mb-3">
                                        <label asp-for="TopicId" class="form-label required">Topic</label>
                                        <select asp-for="TopicId" class="form-select" required>
                                            <option value="">Select topic...</option>
                                            @foreach (var topic in ViewBag.Topics as List<FormBuilder.Core.Entities.Topic>)
                                            {
                                                <option value="@topic.Id">@topic.Name</option>
                                            }
                                        </select>
                                        <span asp-validation-for="TopicId" class="text-danger"></span>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="Description" class="form-label required">Description</label>
                                    <textarea asp-for="Description" class="form-control" rows="4" required></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                    <small class="text-muted">Supports markdown formatting</small>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="ImageFile" class="form-label">Template Image</label>
                                    <div class="upload-area border rounded p-4 text-center" data-upload-area>
                                        <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-2"></i>
                                        <p class="mb-2">Drag & drop an image here or click to browse</p>
                                        <input asp-for="ImageFile" type="file" class="d-none" accept="image/*">
                                        <small class="text-muted">Max size: 5MB. Formats: JPG, PNG, WEBP</small>
                                    </div>
                                    <div id="imagePreview" class="mt-2"></div>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="Tags" class="form-label">Tags</label>
                                    <input asp-for="Tags" class="form-control" 
                                           placeholder="Enter tags separated by commas">
                                    <small class="text-muted">e.g., survey, feedback, quiz</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Questions Tab -->
                    <div class="tab-pane fade" id="questions" role="tabpanel">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="mb-4">Template Questions</h5>
                                
                                <!-- Question Type Selector -->
                                <div class="row mb-4" id="question-type-selector">
                                    <div class="col-md-3 mb-2">
                                        <button type="button" class="btn btn-outline-primary w-100 question-type-btn" 
                                                data-question-type="string">
                                            <i class="fas fa-font"></i>
                                            <span class="d-block">Short Text</span>
                                            <small class="question-count">(0/4)</small>
                                        </button>
                                    </div>
                                    <div class="col-md-3 mb-2">
                                        <button type="button" class="btn btn-outline-info w-100 question-type-btn" 
                                                data-question-type="text">
                                            <i class="fas fa-align-left"></i>
                                            <span class="d-block">Long Text</span>
                                            <small class="question-count">(0/4)</small>
                                        </button>
                                    </div>
                                    <div class="col-md-3 mb-2">
                                        <button type="button" class="btn btn-outline-success w-100 question-type-btn" 
                                                data-question-type="integer">
                                            <i class="fas fa-hashtag"></i>
                                            <span class="d-block">Number</span>
                                            <small class="question-count">(0/4)</small>
                                        </button>
                                    </div>
                                    <div class="col-md-3 mb-2">
                                        <button type="button" class="btn btn-outline-warning w-100 question-type-btn" 
                                                data-question-type="checkbox">
                                            <i class="fas fa-check-square"></i>
                                            <span class="d-block">Checkbox</span>
                                            <small class="question-count">(0/4)</small>
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Questions Container -->
                                <div id="questions-container">
                                    <!-- Empty state -->
                                    <div id="no-questions-message" class="text-center py-5">
                                        <i class="fas fa-clipboard-question fa-4x text-muted mb-3"></i>
                                        <h6 class="text-muted">No questions added yet</h6>
                                        <p class="text-muted">Click a question type above to add your first question.</p>
                                    </div>
                                    
                                    <!-- Questions will be dynamically added here -->
                                </div>
                                
                                <div class="alert alert-info mt-3">
                                    <i class="fas fa-info-circle"></i>
                                    You can add up to 4 questions of each type (16 total).
                                    Questions marked with "Show in table" will appear in the forms list.
                                </div>
                            </div>
                        </div>
                        
                        <!-- Question Preview -->
                        <div class="card mt-3">
                            <div class="card-header bg-light">
                                <h6 class="mb-0"><i class="fas fa-eye"></i> Form Preview</h6>
                            </div>
                            <div class="card-body" id="question-preview">
                                <p class="text-muted text-center">Add questions to see how your form will look</p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Access Tab -->
                    <div class="tab-pane fade" id="access" role="tabpanel">
                        <div class="card">
                            <div class="card-body">
                                <div class="form-check mb-3">
                                    <input asp-for="IsPublic" class="form-check-input" checked>
                                    <label asp-for="IsPublic" class="form-check-label">
                                        Public Template (any authenticated user can fill)
                                    </label>
                                </div>
                                
                                <div id="userAccessControl" class="d-none">
                                    <h6>Allowed Users</h6>
                                    <p class="text-muted">Select specific users who can access this template</p>
                                    
                                    <div class="mb-3">
                                        <label class="form-label">Search Users</label>
                                        <input type="text" class="form-control" id="userSearch" 
                                            placeholder="Type name or email..." 
                                            data-autocomplete="users">
                                    </div>
                                    
                                    <div id="selectedUsers" class="mb-3">
                                        <!-- Selected users will appear here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Form Actions -->
                <div class="mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Create Template
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/modules/questions.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize modules
            if (typeof QuestionManager !== 'undefined') {
                QuestionManager.init();
            }
            if (typeof DragDrop !== 'undefined') {
                DragDrop.init();
            }
            
            // Remove the updateQuestionCounts function and setTimeout call
            // QuestionManager handles all of this now
            
            // FORM SUBMIT ÖNCESİ HIDDEN INPUTLARI EKLE
            const form = document.querySelector('form');
            
            // Form submit event
            form.addEventListener('submit', function(e) {
                console.log('Form submitting...');
                
                const questionTypes = ['String', 'Text', 'Int', 'Checkbox'];
                const numbers = [1, 2, 3, 4];
                
                questionTypes.forEach(type => {
                    numbers.forEach(num => {
                        const prefix = `Custom${type}${num}`;
                        const stateInput = form.querySelector(`input[name="${prefix}State"]`);
                        
                        if (!stateInput) {
                            // State = false
                            addHiddenInput(form, `${prefix}State`, 'false');
                            // Question ve Description için null string
                            addHiddenInput(form, `${prefix}Question`, '');
                            addHiddenInput(form, `${prefix}Description`, '');
                            // ShowInTable = false
                            addHiddenInput(form, `${prefix}ShowInTable`, 'false');
                        }
                    });
                });
                
                const checkboxes = form.querySelectorAll('input[type="checkbox"][name$="ShowInTable"]');
                checkboxes.forEach(checkbox => {
                    if (!checkbox.checked) {
                        addHiddenInput(form, checkbox.name, 'false');
                    }
                });
                
                console.log('Hidden inputs added');
            });
            
            function addHiddenInput(form, name, value) {
                if (!form.querySelector(`input[name="${name}"]`)) {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = name;
                    input.value = value;
                    form.appendChild(input);
                    console.log(`Added hidden input: ${name} = ${value}`);
                }
            }
            
            // Access control toggle
            const isPublicCheckbox = document.getElementById('IsPublic');
            const userAccessControl = document.getElementById('userAccessControl');
            
            if (isPublicCheckbox && userAccessControl) {
                isPublicCheckbox.addEventListener('change', function() {
                    if (this.checked) {
                        userAccessControl.classList.add('d-none');
                    } else {
                        userAccessControl.classList.remove('d-none');
                    }
                });
            }
            
            // Image upload preview
            const imageInput = document.querySelector('input[type="file"]');
            const uploadArea = document.querySelector('[data-upload-area]');
            const imagePreview = document.getElementById('imagePreview');
            
            if (uploadArea && imageInput) {
                uploadArea.addEventListener('click', () => imageInput.click());
                
                imageInput.addEventListener('change', function(e) {
                    const file = e.target.files[0];
                    if (file && file.type.startsWith('image/')) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            imagePreview.innerHTML = `
                                <img src="${e.target.result}" class="img-thumbnail" style="max-height: 200px;">
                            `;
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }
        });
    </script>
    
    <style>
        .question-type-btn {
            padding: 1rem;
            transition: all 0.3s ease;
        }
        
        .question-type-btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .question-type-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
        
        .question-type-btn i {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }
        
        .question-type-btn .question-count {
            font-size: 0.875rem;
            opacity: 0.8;
        }
        
        .question-item {
            border-left: 4px solid #dee2e6;
            transition: all 0.3s ease;
        }
        
        .question-item:hover {
            border-left-color: #0d6efd;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .question-handle {
            cursor: move;
        }
        
        #no-questions-message {
            color: #6c757d;
        }
    </style>
}